<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on &gt; /dev/null</title>
    <link>https://leoh0.github.io/tags/docker/</link>
    <description>Recent content in docker on &gt; /dev/null</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 May 2018 00:55:10 +0900</lastBuildDate>
    
	<atom:link href="https://leoh0.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>immutable kubernetes by linuxkit</title>
      <link>https://leoh0.github.io/post/2018-05-21-immutable-kubernetes/</link>
      <pubDate>Mon, 21 May 2018 00:55:10 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2018-05-21-immutable-kubernetes/</guid>
      <description>linuxkit with kubernetes    &amp;hellip; As a developer and sometimes system administrator, one of the scariest things I ever encounter is a server that’s been running for ages which has seen multiple upgrades of system and application software. &amp;hellip; Need to upgrade? No problem. Build a new, upgraded system and throw the old one away. New app revision? Same thing. Build a server (or image) with a new revision and throw away the old ones.</description>
    </item>
    
    <item>
      <title>how to make unofficial kubernetes pdf documents 2</title>
      <link>https://leoh0.github.io/post/2018-04-07-how-to-make-unofficial-kubernetes-pdf-documents-2/</link>
      <pubDate>Sat, 07 Apr 2018 01:15:37 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2018-04-07-how-to-make-unofficial-kubernetes-pdf-documents-2/</guid>
      <description>kubernetes   download k8s 1.10 pdf 이전 포스팅과 뭐가 다른가? 이전에 해보고 더이상 안할거라 생각했다가 우연히 다시 포스팅을 읽었다가 너무 복잡한거 같아서 docker로 제작했다.
아래와 같이 사용할시 pdf를 뽑아 낼 수 있다.
docker run -ti -v $PWD:/out3 leoh0/k8s-website-to-pdf  아니면 아래 dockerfile로 새로 제작해서 뽑아내면 된다. 참고
docker build -t k8s-website-to-pdf . docker run -ti -v $PWD:/out3 k8s-website-to-pdf  우선 전체 dockerfile은 아래와 같다.
# 참고 https://github.</description>
    </item>
    
    <item>
      <title>Install openstack on macos Sierra using kolla-kubernetes with xhyve</title>
      <link>https://leoh0.github.io/post/2016-10-13-install-openstack-on-macos-sierra-using-kolla-kubernetes-and-xhyve/</link>
      <pubDate>Thu, 13 Oct 2016 00:02:06 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2016-10-13-install-openstack-on-macos-sierra-using-kolla-kubernetes-and-xhyve/</guid>
      <description>클릭해서 과정 보기
kubernetes 로 openstack mitaka를 설치해 봤습니다.
위의 이미지를 클릭하면 전과정을 보실 수 있습니다. 참고하시면 좋을 것 같습니다.
대략 31분 정도 걸려서 minikube 구성 부터 전체 셋업 및 vm 2개 띄워서 로그인 테스트 합니다.
그리고 저는 macos Sierra 에서 xhyve 로 8G 머신을 만들어서 사용을 했습니다.
linux 머신이 있으면 kvm을 이용하시는 것도 좋을것 같습니다.
windows 환경에선 xhyve 외에도 virtual box 등을 이용하셔도 좋을 것 같습니다.
셋업할때 kubernetes-cli 는 1.</description>
    </item>
    
    <item>
      <title>containerize openstack</title>
      <link>https://leoh0.github.io/post/2015-04-24-containerize-openstack/</link>
      <pubDate>Fri, 24 Apr 2015 01:08:16 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2015-04-24-containerize-openstack/</guid>
      <description>docker 바깥으로 process를 낼 수 있는 방법들로 kvm 프로세스를 docker 바깥 host os 에 배치시키는 방법이 가능하네요.
실질적으로 docker안에 kvm이 들어가게 된다면 docker process에 vm이 종속적이게 되어 불안정한 구성이 될테지만
이런 방식으로 피해 갈 수도 있는 것을 확인했습니다.
  containerize-openstack   아무튼 사진과 같이 기묘한 형태로 (실제 host os 에는 없는 바이너리가 parent 1 을 물고 process 로 뜨게되는) 관리가 가능합니다.
물론 보안 적인 결함에 대해서야 아직 끝도없이 이야기할 주제이겠지만 앞으로의 provisioning의 새로운 가능성에 대해서 관심이 가는건 사실인것 같습니다.</description>
    </item>
    
  </channel>
</rss>