<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>K8s on &gt; /dev/null</title>
    <link>https://leoh0.github.io/tags/k8s/</link>
    <description>Recent content in K8s on &gt; /dev/null</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 03 Jan 2019 22:33:17 +0900</lastBuildDate>
    
	<atom:link href="https://leoh0.github.io/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2019 01 03 Immutable Kubernetes by Linuxkit</title>
      <link>https://leoh0.github.io/post/2019-01-03-immutable-kubernetes-by-linuxkit/</link>
      <pubDate>Thu, 03 Jan 2019 22:33:17 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2019-01-03-immutable-kubernetes-by-linuxkit/</guid>
      <description>open infra day때 발표 했던 슬라이드 를 그냥 옮겨놨다.
지금와서 이야기 하지만 처음 어떤 세션 발표할것인지 물어봤을때 아무생각없이 좀 deep한걸 발표하고 싶어서 deep dive를 골랐더니 1시간 50번 뱔표였다. 그래서 86페이지짜리 pt를.. 하지만 생각보다 중요한 이야기는 많이 빼먹은것 같아서 다시 보면 아쉽긴 하다. 그래도 추억이니 옮겨둠.
 </description>
    </item>
    
    <item>
      <title>Use Admin Token Instead of Cert In Admin.conf For Kubernetes</title>
      <link>https://leoh0.github.io/post/2018-11-28-create-admin-token-for-kubernetes/</link>
      <pubDate>Wed, 28 Nov 2018 18:16:54 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2018-11-28-create-admin-token-for-kubernetes/</guid>
      <description>일반적으로 kubernetes에서 운영자가 kubernetes를 조작하기 위해서는 admin.conf 와 같이 전체 권한을 사용할 수 있는 파일을 이용해서 kubectl을 사용합니다. 이때 admin.conf는 일반적으로 kubeadm 등을 이용하면 certification expiration이 1년등에 제약이 있어서 1년 뒤에는 이 admin.conf를 이용할 시 사용이 불가능해서 재 발급 받아야 합니다.
물론 kubespray등을 쓰면 10년의 기간으로 생성하긴 하나 날짜가 기간한정이란게 여전히 불안함을 해소하지는 못합니다.
그래서 인증서 기반 방법을 피해서 token 기반으로 인증을 하면 좋지만 일반적으로 알려진 token auth file로 관리하려면 apiserver에 사용할 파일을 편집하는등 불편할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Kubernetes Prometheus Metric Aggregation by Daemonset, Statefulset, Deployment Walkthrough</title>
      <link>https://leoh0.github.io/post/2018-10-09-kubernetes-prometheus-metric-aggregation-by-daemonset-statefulset-deployment-walkthrough/</link>
      <pubDate>Tue, 09 Oct 2018 01:42:33 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2018-10-09-kubernetes-prometheus-metric-aggregation-by-daemonset-statefulset-deployment-walkthrough/</guid>
      <description>Kubernetes Aggregation Metrics
  kubernetes and prometheus 최근 kubernetes에서 metric을 관리하는 것중 가장 유명한 것은 prometheus라고 할 수 있습니다. metric 관리방법으로 heapster를 사용할때 까지는 influxdb를 많이 사용하는 추세 였으나 앞으로 대채될 metrics-server는 현재 in-memory sink밖에 없어서 우선 기존에 influxdb를 사용하던것을 많이 안쓰게 될것 같습니다. 더욱이 custom metric들에 대한 예제들이 prometheus로 제공되고 있어서 prometheus로 metric관리가 통합될것으로 기대하고 있습니다.
이러한 prometheus로 kubernetes metric들을 수집하는 것은 대체로 크게 2가지 케이스 입니다.</description>
    </item>
    
    <item>
      <title>How to Migrate Ceph RBD to CSI Ceph RBD in K8S</title>
      <link>https://leoh0.github.io/post/2018-09-09-how-to-migrate-ceph-rbd-to-csi-ceph-rbd-in-k8s/</link>
      <pubDate>Sun, 09 Sep 2018 11:43:14 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2018-09-09-how-to-migrate-ceph-rbd-to-csi-ceph-rbd-in-k8s/</guid>
      <description>Container Storage Interface가 왜 필요한가 Container Storage Interface(이하 CSI)는 k8s에서 확장 가능한 볼륨 사용을 위한 현존하는 최고의 방법입니다. 기존에 방법이 무엇이 문제였는지는 2가지로 접근 가능합니다.
 볼륨을 생성(or 삭제)할때
 볼륨을 생성할때는 기존에는 controller manager중에 controller가 볼륨을 생성하는식이였습니다. 예를 들어 Persistent volume claim(이하 PVC)이 들어올시 PVC를 watch 하는 controller가 이 변화를 감지하며 volume을 생성(provisioning) 했습니다. 하지만 대부분의 볼륨들을 생성 하려면 이를 위한 바이너리가 있어야 합니다.(예를 들어 ceph같은 경우 rbd 바이너리) 하지만 이런 바이너리들이 in-tree volume type들이 추가될때마다 같이 추가되면 용량이나 버전 관리에 힘든점이 있기때문에 이를 밖으로 빼서 관리하려고 했습니다.</description>
    </item>
    
    <item>
      <title>How to Debug Dead Container in K8s</title>
      <link>https://leoh0.github.io/post/2018-08-04-how-to-debug-dead-container-in-k8s/</link>
      <pubDate>Wed, 08 Aug 2018 04:09:48 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2018-08-04-how-to-debug-dead-container-in-k8s/</guid>
      <description>Bugs happen. That&amp;rsquo;s a fact of life.
&amp;ldquo;ABSOLUTELY THE MOST IMPORTANT THING IN THE UNIVERSE WHEN IT COMES TO SOFTWARE DEVELOPMENT&amp;rdquo;, linus
 k8s에서 pod 을 debugging 하는 일반적인 방법들  Everyone knows that debugging is twice as hard as writing a program in the first place.
“The Elements of Programming Style”, 2nd edition
 우리는 소프트웨어는 언제나 문제가 생길 수 있다는 것을 알고 있고 많은 문제들을 debugging 을 통해서 해결합니다.</description>
    </item>
    
    <item>
      <title>immutable kubernetes by linuxkit</title>
      <link>https://leoh0.github.io/post/2018-05-21-immutable-kubernetes/</link>
      <pubDate>Mon, 21 May 2018 00:55:10 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2018-05-21-immutable-kubernetes/</guid>
      <description>linuxkit with kubernetes    &amp;hellip; As a developer and sometimes system administrator, one of the scariest things I ever encounter is a server that’s been running for ages which has seen multiple upgrades of system and application software. &amp;hellip; Need to upgrade? No problem. Build a new, upgraded system and throw the old one away. New app revision? Same thing. Build a server (or image) with a new revision and throw away the old ones.</description>
    </item>
    
    <item>
      <title>how to make unofficial kubernetes pdf documents 2</title>
      <link>https://leoh0.github.io/post/2018-04-07-how-to-make-unofficial-kubernetes-pdf-documents-2/</link>
      <pubDate>Sat, 07 Apr 2018 01:15:37 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2018-04-07-how-to-make-unofficial-kubernetes-pdf-documents-2/</guid>
      <description>kubernetes   download k8s 1.10 pdf 이전 포스팅과 뭐가 다른가? 이전에 해보고 더이상 안할거라 생각했다가 우연히 다시 포스팅을 읽었다가 너무 복잡한거 같아서 docker로 제작했다.
아래와 같이 사용할시 pdf를 뽑아 낼 수 있다.
docker run -ti -v $PWD:/out3 leoh0/k8s-website-to-pdf  아니면 아래 dockerfile로 새로 제작해서 뽑아내면 된다. 참고
docker build -t k8s-website-to-pdf . docker run -ti -v $PWD:/out3 k8s-website-to-pdf  우선 전체 dockerfile은 아래와 같다.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  # 참고 https://github.</description>
    </item>
    
    <item>
      <title>how to make unofficial kubernetes pdf documents</title>
      <link>https://leoh0.github.io/post/2017-10-23-how-to-make-unofficial-kubernetes-pdf-documents/</link>
      <pubDate>Mon, 23 Oct 2017 21:21:47 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2017-10-23-how-to-make-unofficial-kubernetes-pdf-documents/</guid>
      <description>kubernetes   download pdf 왜? 밖에서 심심할때 종이로 출력해서 문서를 좀 더 봐야겠다는 생각에 pdf 버전을 구해보려고 했으나. 우선 k8s webpage를 관리하는 website프로젝트에서 아래와 같이 지원을 안한다고 딱잘라서 이야기 하는것을 찾았다.
 &amp;hellip; we don&amp;rsquo;t plan to make PDFs available.
 그리고 마땅히 검색했을때 방법이 없기에 만들어야 겠다고 생각했다.
어떻게 할까? 외부의 웹사이트를 pdf 로 출력하는 방법들은 여러가지가 있다 그냥 웹 주소를 넣으면 바로 pdf 로 변환해 주는 솔루션이나 사이트들도 많다.</description>
    </item>
    
    <item>
      <title>k8s tools for watching log and login to multiple containers</title>
      <link>https://leoh0.github.io/post/2017-07-27-k8s-tools-for-watching-log-and-login-multiple-containers/</link>
      <pubDate>Thu, 27 Jul 2017 00:58:28 +0900</pubDate>
      
      <guid>https://leoh0.github.io/post/2017-07-27-k8s-tools-for-watching-log-and-login-multiple-containers/</guid>
      <description>k8s 사용하면서 개인 취향에 맞게 작성한 자작 스크립트 몇가지 소개해 드리려고 합니다.
watching log k8s 에서 pod들의 로그 볼일 들이 많다보니 command 일일치다보니 불편했는데 kubetail이란 프로젝트가 있었습니다.
덕분에 잘 쓰고 있었는데 인터페이스가 개인취향에 안맞아서 약간 수정해서 쓰고 있습니다.
전반적으로 pod 선택 방법의 변경과 비슷한 이름으로 auto tailing 기능을 추가 했습니다.
아래들이 대표적인 기능 입니다.
 선택된것과 같은 pod들을 전체 log tailing 하고 변화가 있을시 auto reload 함</description>
    </item>
    
  </channel>
</rss>