<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: graph-easy | > /dev/null]]></title>
  <link href="http://leoh0.github.io/blog/categories/graph-easy/atom.xml" rel="self"/>
  <link href="http://leoh0.github.io/"/>
  <updated>2018-04-07T01:46:43+09:00</updated>
  <id>http://leoh0.github.io/</id>
  <author>
    <name><![CDATA[leoh0]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[draw openstack L2 network architecture automatically]]></title>
    <link href="http://leoh0.github.io/blog/2015/04/03/draw-openstack-l2-network-architecture-automatically/"/>
    <updated>2015-04-03T02:29:52+09:00</updated>
    <id>http://leoh0.github.io/blog/2015/04/03/draw-openstack-l2-network-architecture-automatically</id>
    <content type="html"><![CDATA[<p>iptables를 좀 보기 편하게 할 수 없는가를 이야기하다가 <a href="http://atoato88.hatenablog.com/entry/2014/01/25/133852">여기</a>사이트를 보게되었다. <br/>
그래서 감동을 받아서 이에 뭔가 남기고자 삽질을 했다. (어짜피 요새 deploy 테스트 하다보면 남는게 시간이다 보니..) <br/>
대략 openstack neutron의 L2 architecture 에 구성요소들을 좀 보기 편하게 그린것이다. <br/>
지금 tunnel architecture를 가진건 없어서 br-tun 쪽은 그리려고 테스트 하진 않았다. 다만 ovs 나 bridge 모드에서 대략적인 그림은 맘에 들게 그려지는 것 같다.</p>

<p>ascii 로 그린 architecture 들이다.</p>

<h1>bridge-vlan</h1>

<p><img src="/images/draw-bridge-vlan.png" width="1312" height="544" title="bridge-vlan" ></p>

<h1>openvswitch-flat</h1>

<p><img src="/images/draw-ovs-flat.png" width="2526" height="780" title="openvswitch-flat" ></p>

<h1>openvswitch-vlan</h1>

<p><img src="/images/draw-ovs-vlan.png" width="2752" height="544" title="openvswitch-vlan" ></p>

<p>이걸 graphviz 로 그리면 다음과 같다.</p>

<h1>bridge-vlan</h1>

<p><img src="/images/draw-bridge-vlan-g.png" width="757" height="131" title="bridge-vlan" ></p>

<h1>openvswitch-flat</h1>

<p><img src="/images/draw-ovs-flat-g.png" width="1101" height="491" title="openvswitch-flat" ></p>

<h1>openvswitch-vlan</h1>

<p><img src="/images/draw-ovs-vlan-g.png" width="1594" height="131" title="openvswitch-vlan" ></p>

<p>이걸 3D 로 그리면 다음과 같다.</p>

<h1>bridge-vlan</h1>

<p><img src="/images/draw-bridge-vlan-3d.png" width="2716" height="1564" title="bridge-vlan" ></p>

<h1>openvswitch-flat</h1>

<p><img src="/images/draw-ovs-flat-3d.png" width="2844" height="1668" title="openvswitch-flat" ></p>

<h1>openvswitch-vlan</h1>

<p><img src="/images/draw-ovs-vlan-3d.png" width="2844" height="2032" title="openvswitch-vlan" ></p>

<p>는 사실 그냥 이전에 그려논 그림이다..</p>

<p>아무튼 해당 그림을 그리기 위해 제작한 스크립트 이다. <br/>
아래 스크립트를 컴퓨트 노드에서 돌리면 해당 정보를 수집해서 그리게 된다. (물론 네트워크 노드도 가능..) <br/>
귀찮아서 하드코딩한 부분들은 편하게 고쳐쓰시길..</p>

<p><div><script src='https://gist.github.com/8499b653f479766378d8.js'></script>
<noscript><pre><code>#!/bin/bash

sudo apt-get install -qqy ethtool libgraph-easy-perl graphviz &gt; /dev/null

EXCEPT=/tmp/exceptlist
echo &#39;&#39; &gt; $EXCEPT
result=&quot;&quot;

function on_exit() {
  rm -f $EXCEPT
}

trap &quot;on_exit&quot; EXIT

# find ovs br &lt;-&gt; port
if [ &quot;x$(which ovs-vsctl)&quot; != &quot;x&quot; ]; then
  for br in $(sudo ovs-vsctl list-br); do
    for port in $(sudo ovs-vsctl list-ports $br); do
      result=$(echo &quot;$result [$port]----&gt;[$br] [$br]----&gt;[$port] &quot;)
    done
  done
fi

# find br &lt;-&gt; port
for br in $(brctl show | sed &#39;1d&#39; | grep &#39;^[a-z]&#39; | awk &#39;{print $1}&#39;); do
  for port in $(brctl show $br | sed &#39;1d&#39; | sed &#39;s/.*\t.*\t.*\t\(.*\)/\1/g&#39;); do
    result=$(echo &quot;$result [$port]----&gt;[$br] [$br]----&gt;[$port] &quot;)
  done
done

# ip namespace veth
for ns in $(ip netns); do
  for interface in $(ip netns exec $ns ip a | cut -d&#39;:&#39; -f-2 | grep ^[1-9]); do
    index=$(ip netns exec $ns ethtool -S $interface 2&gt; /dev/null | grep peer_ifindex | awk &#39;{print $2}&#39;)
    ifname=$(ip netns exec $ns ip a | grep &quot;^$index:&quot; | awk &#39;{print $2}&#39; | cut -d&#39;:&#39; -f1)
    if [ &quot;x$ifname&quot; == &quot;x&quot; ]; then
      ifname=$(ip a | grep &quot;^$index:&quot; | awk &#39;{print $2}&#39; | cut -d&#39;:&#39; -f1)
      if [ &quot;x$ifname&quot; != &quot;x&quot; ]; then
        echo $ifname &gt;&gt; $EXCEPT
        result=$(echo &quot;$result [$interface]----&gt;[$ifname] [$ifname]----&gt;[$interface] &quot;)
      fi
    fi
  done
done

# ip veth
for interface in $(ip a | cut -d&#39;:&#39; -f-2 | grep ^[1-9]); do
  if cat $EXCEPT | grep -q &quot;^$interface$&quot; ; then continue ; fi
  index=$(ethtool -S $interface 2&gt; /dev/null | grep peer_ifindex | awk &#39;{print $2}&#39;)
  ifname=$(ip a | grep &quot;^$index:&quot; | awk &#39;{print $2}&#39; | cut -d&#39;:&#39; -f1)
  if [ &quot;x$ifname&quot; != &quot;x&quot; ]; then
    echo $ifname &gt;&gt; $EXCEPT
    result=$(echo &quot;$result [$interface]----&gt;[$ifname] [$ifname]----&gt;[$interface] &quot;)
  fi
done

# vm tap
for tap in $(ip a | cut -d&#39;:&#39; -f-2 | grep ^[1-9]  | cut -d&#39; &#39; -f2 | grep &#39;^tap&#39;); do
  vmuuid=$(grep -rl &quot;$tap&quot; /var/lib/nova/instances/*/libvirt.xml | cut -d&#39;/&#39; -f6)
  if [ &quot;x$vmuuid&quot; != &quot;x&quot; ]; then
    result=$(echo &quot;$result [$tap]----&gt;[VM-$vmuuid] [VM-$vmuuid]----&gt;[$tap] &quot;)
  fi
done

rm -f $EXCEPT

echo $result | graph-easy
echo $result | graph-easy -as dot | dot -Tpng -o l2path.png
</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
