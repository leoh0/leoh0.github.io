<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: compute-node | > /dev/null]]></title>
  <link href="http://leoh0.github.io/blog/categories/compute-node/atom.xml" rel="self"/>
  <link href="http://leoh0.github.io/"/>
  <updated>2016-09-29T23:49:48+09:00</updated>
  <id>http://leoh0.github.io/</id>
  <author>
    <name><![CDATA[leoh0]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NIC 1개로 compute node를 vlan type으로 neutron을 사용하여 구성하기 위한 팁]]></title>
    <link href="http://leoh0.github.io/blog/2015/02/11/build-openstack-node-using-just-1-nic/"/>
    <updated>2015-02-11T17:12:39+09:00</updated>
    <id>http://leoh0.github.io/blog/2015/02/11/build-openstack-node-using-just-1-nic</id>
    <content type="html"><![CDATA[<p>gre 같은 tunnel 을 사용한다면 NIC 하나로 구성 할 수 있겠지만 그게 아니라면 일반적으로는 management 용 NIC 한개와 service 용 NIC 한개가 필요하다.</p>

<p>우선 아래와 같은 상태가 2 NIC을 사용하는 일반적인 구성이다.</p>

<p>그림 처럼 eth0은 management를 위한 ip로 이용되며 eth1을 guest interface(vlan 이라면 0.0.0.0)로 사용할 수 있다.</p>

<p><img src="/images/1nic-neutron-1.png" width="449" height="487"></p>

<p>단도직입적으로 ethernet 한개로는 아래와 같이 구성하면 된다.</p>

<p>우선 eth0은 0.0.0.0 으로 ip를 사용안하는 대신 br0 부분에서 기존의 management용 ip를 가져간다.</p>

<p><img src="/images/1nic-neutron-2.png" width="449" height="487"></p>

<p>아래와 같은 흐름으로 진행하면 된다.</p>

<pre><code class="bash"># br0 switch 추가 (자동으로 br0 switch 에는 br0 interface가 달려있는 상태로 생성됨)
ovs-vsctl add-br br0
# br0 switch 에 eth0 interface를 추가 시켜줌
ovs-vsctl add-port br0 eth0
# ip 및 route 세팅
/sbin/ifconfig eth0 0.0.0.0 up
/sbin/ifconfig br0 x.x.x.x/xx up

# br-eth0 인터페이스를 생성 (br-ex 도 비슷)
ovs-vsctl add-br br-eth0
# br0 switch와 br-eth0 을 연결 시킬 veth 생성
ip link add br0-veth type veth peer name br-eth0-veth
ovs-vsctl add-port br0 br0-veth
ovs-vsctl add-port br-eth0 br-eth0-veth
</code></pre>

<p>만약 network node 라면 br-eth0 대신 br-ex 를 사용하고 추가적으로 nat 를 사용하기 위한 ip 하나만 할당하면 된다.</p>
]]></content>
  </entry>
  
</feed>
