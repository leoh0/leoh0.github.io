<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ping | > /dev/null]]></title>
  <link href="http://leoh0.github.io/blog/categories/ping/atom.xml" rel="self"/>
  <link href="http://leoh0.github.io/"/>
  <updated>2016-05-10T03:20:11+09:00</updated>
  <id>http://leoh0.github.io/</id>
  <author>
    <name><![CDATA[leoh0]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ping openstack vms in specific host]]></title>
    <link href="http://leoh0.github.io/blog/2015/03/31/ping-openstack-vms-in-specific-host/"/>
    <updated>2015-03-31T09:36:44+09:00</updated>
    <id>http://leoh0.github.io/blog/2015/03/31/ping-openstack-vms-in-specific-host</id>
    <content type="html"><![CDATA[<p><div><script src='https://gist.github.com/261cc772f9bc5ab916b5.js'></script>
<noscript><pre><code>#!/usr/bin/env bash

declare -A vm_ip
declare -A vm_id
declare -A vm_status

while read -r _ id _ name _ ip _ ; do
  ip=$(echo $ip|cut -d&#39;=&#39; -f2)
  vm_ip[$name]=$ip
  vm_id[$name]=$id
  vm_status[$name]=&quot;S&quot;
  ping -c1 -i0.1 -t1 -W100 $ip &gt; /dev/null
  if [ &quot;x$?&quot; == &quot;x2&quot; ]; then
    vm_status[$name]=&quot;N&quot;
  fi
done&lt; &lt;(nova list --all-tenants --fields name,networks --host $1 | grep &quot;=&quot;)

while read -r _ net_id _ id _ _ _ _ ip _ ; do
  ip=$(echo $ip|cut -d&#39;&quot;&#39; -f2)
  net_id_prefix=${net_id:0:11}
  name=&quot;_DHCP_&quot;$net_id_prefix
  vm_ip[$name]=$ip
  vm_id[$name]=$id
  vm_status[$name]=&quot;S&quot;
  ping -c1 -i0.1 -t1 -W100 $ip &gt; /dev/null
  if [ &quot;x$?&quot; == &quot;x2&quot; ]; then
    vm_status[$name]=&quot;N&quot;
  fi
done&lt; &lt;(neutron port-list --device-owner=network:dhcp --binding:host_id $1 -c network_id -c id -c fixed_ips | sed &#39;2d&#39; | grep &#39;|&#39;)

c=${#vm_ip[@]}
if [ &quot;x$c&quot; == &quot;x0&quot; ] ; then
  echo &quot;there is no vm or dhcp servers.. exit!!&quot;
  exit
fi

while true; do
  for h in ${!vm_ip[@]}; do
    ping -c1 -i0.1 -t1 -W100 ${vm_ip[$h]} &gt; /dev/null
    if [ &quot;x$?&quot; == &quot;x2&quot; ]; then
      if [ &quot;x${vm_status[$h]}&quot; != &quot;xN&quot; ] ; then
        vm_status[$h]=&quot;F&quot;
      fi
    else
      vm_status[$h]=&quot;S&quot;
    fi
  done
  for h in ${!vm_ip[@]}; do
    case ${vm_status[$h]} in
      S)
        status=&quot;\033[01;32mOK\033[00m&quot; ;;
      F)
        status=&quot;\033[01;31mFAIL\033[00m&quot; ;;
      N)
        status=&quot;\033[01;33mNOCON\033[00m&quot; ;;
    esac
    pre=$(printf &quot;%-30s  %-15s %-32s %s\n&quot; &quot;${h::30}&quot; &quot;${vm_ip[$h]}&quot; &quot;${vm_id[$h]}&quot; &quot;$status&quot;)
    echo -en &quot;\033[K&quot;
    echo -en &quot;$pre\n&quot;
  done
  sleep 1
  echo -en &quot;\033[${c}A&quot;
done
</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
